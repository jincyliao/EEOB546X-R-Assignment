ll <- list(a=rnorm(6, mean=1), b=rnorm(6, mean=4), c=rnorm(6, mean=6))
ll
lapply(ll, mean)
lapply(ll, mean, na.rm=TRUE)
x * 2
meanRemoveNA <- function(x) mean(x, na.rm=TRUE)
lapply(ll, meanRemoveNA)
fun_name <- function(args) {
# body, containing R expressions return(value)
}
lapply(ll, function(x) mean(x, na.rm=TRUE))
meanRemoveNAVerbose <- function(x, warn=TRUE) {
# A function that removes missing values when calculating the mean # and warns us about it.
if (any(is.na(x)) && warn) { warning("removing some missing values!")
}
mean(x, na.rm=TRUE)
}
lapply(ll, function(x) mean(x, na.rm=TRUE))
sapply(ll, function(x) mean(x, na.rm=TRUE))
ind_1 <- list(loci_1=c("T", "T"), loci_2=c("T", "G"), loci_3=c("C", "G"))
ind_2 <- list(loci_1=c("A", "A"), loci_2=c("G", "G"), loci_3=c("C", "G"))
mapply(function(a, b) length(intersect(a, b)), ind_1, ind_2)
source("functions/functions-lesson.R")
d <- read.csv("https://raw.githubusercontent.com/vsbuffalo/bds-files/master/chapter-08-r/Dataset_S1.txt")
d$GC.binned <- cut(d$percent.GC, 5)
read.csv("https://raw.githubusercontent.com/vsbuffalo/bds-files/master/chapter-08-r/Dataset_S1.txt")
d <- read.csv("https://raw.githubusercontent.com/vsbuffalo/bds-files/master/chapter-08-r/Dataset_S1.txt")
d$GC.binned <- cut(d$percent.GC, 5)
d_split <- split(d$depth, d$GC.binned)
str(d_split)
unlist(lapply(d_split, mean))
d <- read.csv("https://raw.githubusercontent.com/vsbuffalo/bds-files/master/chapter-08-r/Dataset_S1.txt")
d$GC.binned <- cut(d$percent.GC, 5)
read.csv("https://raw.githubusercontent.com/vsbuffalo/bds-files/master/chapter-08-r/Dataset_S1.txt")
View(d)
d$GC.binned <- cut(d$percent.GC, 5)
d$GC.binned <- cut(20, 5)
d_split <- split(d$depth, d$GC.binned)
str(d_split)
lapply(d_split, mean)
unlist(lapply(d_split, mean))
sapply(d_split, mean)
dpth_summ <- lapply(split(d$depth, d$GC.binned), summary)
dpth_summ
rbind(dpth_summ[[1]], dpth_summ[[2]])
cbind(dpth_summ[[1]], dpth_summ[[2]])
do.call(rbind, dpth_summ)
do.call(rbind, lapply(split(d$depth, d$GC.binned), summary))
tapply(d$depth, d$GC.binned, mean)
aggregate(d$depth, list(gc=d$GC.binned), mean)
aggregate(d$depth, list(gc=d$GC.binned), mean)
if (!require("dplyr")) install.packages("dplyr") # install dplyr if it's not already installed
library(dplyr)
if (!require("dplyr")) install.packages("dplyr") # install dplyr if it's not already installed
library(dplyr)
d_df <- tbl_df(d)
d_df
select(d_df, start, end, Pi, Recombination, depth) #equivalent to d[, c("start", "end", "Pi", "Recombination", "depth")]
filter(d_df, Pi > 16, percent.GC > 80) #equivalent to d[d$Pi > 16 & d$percent.GC > 80, ]
filter(d_df, Pi > 16, X.GC > 80) #equivalent to d[d$Pi > 16 & d$percent.GC > 80, ]
arrange(d_df, depth) #equivalent to `d[order(d$depth), ]`
arrange(d_df, desc(total.SNPs), desc(depth))
d_df <- select(d_df, -diversity) # remove our earlier diversity column
d_df <- mutate(d_df, diversity = Pi/(10*1000))
d_df
d_df %>%  mutate(GC.scaled = scale(percent.GC)) %>%
filter(GC.scaled > 4, depth > 4) %>%
select(start, end, depth, GC.scaled, percent.GC) %>%
arrange(desc(depth))
d_df %>%  mutate(GC.scaled = scale(X.GC)) %>%
filter(GC.scaled > 4, depth > 4) %>%
select(start, end, depth, GC.scaled, X.GC) %>%
arrange(desc(depth))
mtfs <- read.delim("https://raw.githubusercontent.com/vsbuffalo/bds-files/master/chapter-08-r/motif_recombrates.txt", header=TRUE)
mtfs_df <- tbl_df(mtfs)
mtfs_df %>% group_by(chr)
mtfs_df %>%
group_by(chr) %>%
summarize(max_recom = max(recom), mean_recom = mean(recom), num=n())
mtfs_df %>% group_by(chr) %>%
summarize(max_recom = max(recom), mean_recom = mean(recom), num=n()) %>%
arrange(desc(max_recom))
# if
if (x == some_value) {
# do some stuff in here
} else if (x == other_value) {
# elseif is optional
} else {
#else is optional
}
# if
if (x == 100) {
# do some stuff in here
} else if (x == 50) {
# elseif is optional
} else {
#else is optional
}
# sample a random number from a Poisson distribution
# with a mean (lambda) of 8
x <- rpois(1, lambda=8)
if (x >= 10) {
print("x is greater than or equal to 10")
}
x
# sample a random number from a Poisson distribution
# with a mean (lambda) of 8
x <- rpois(10, lambda=8)
if (x >= 10) {
print("x is greater than or equal to 10")
}
x
# sample a random number from a Poisson distribution
# with a mean (lambda) of 8
x <- rpois(1, lambda=8)
if (x <= 10) {
print("x is greater than or equal to 10")
}
x
for(i in 1:10){
print(i)
}
for(i in 1:3){
for(j in c('a', 'b', 'c')){
print(paste(i,j))
}
}
z <- 1
while(z > 0.1){
z <- runif(1)
print(z)
}
x <-c(-3,1,-5,2)
ifelse(x < 0, -1, 1)
x <- c(-3, 1, -5, 2)
y <- rep(1, length(x))
y[x < 0] <- -1
y
set("/Users/user/R-Assignment")
setwd("/Users/user/R-Assignment")
Genotypes <- read.table("fang_et_al_genotypes.txt", header = TRUE, sep = "\t", stringsAsFactors = FALSE)
SNPposition <- read.table("snp_position.txt", header = TRUE, fill = True, sep = "\t", stringAsFactors = False)
setwd("/Users/user/R-Assignment")
Genotypes <- read.table("fang_et_al_genotypes.txt", header = TRUE, sep = "\t", stringsAsFactors = FALSE)
SNPposition <- read.table("snp_position.txt", header = TRUE, fill = True, sep = "\t", stringAsFactors = False)
View(d)
View(Genotypes)
View(d)
View(d)
View(Genotypes)
SNPposition <- read.table("snp_position.txt", header = TRUE, fill = True, sep = "\t", stringAsFactors = FALSE)
SNPposition <- read.table("snp_position.txt", header = TRUE, fill = True, sep = "\t", stringAsFactors = FALSE)
SNPposition <- read.table("snp_position.txt", header = TRUE, fill = TRUE, sep = "\t", stringAsFactors = FALSE)
SNPposition <- read.table("snp_position.txt", header = TRUE, fill = TRUE, sep = "\t", stringsAsFactors = FALSE)
View(SNPposition)
typeof(Genotypes)
typeof(SNPposition)
str(Genotypes)
str(SNPposition)
colnames(Genotypes)
colnames(SNPposition)
rownames(Genotypes)
rownames(SNPposition)
class(Genotypes)
class(SNPposition)
ncol(Genotypes)
ncol(SNPposition)
names(Genotypes)
names(SNPposition)
nrow(Genotypes)
nrow(SNPposition)
file.info(Genotypes)
file.info(SNPposition)
file.info("fang_et_al_genotypes.txt")
file.info("snp_position.txt")
head(Genotypes)
head(SNPposition)
str(Genotypes)
str(SNPposition)
Maize <- c("ZMMIL", "ZMMLR", "ZMMMR")
Teosinte <- c("ZMPBA", "ZMPIL", "ZMPJA")
MaizeGenotypes <- Genotypes[Genotypes$Group %in% Maize, ]
TeosinteGenotypes <- Genotypes[Genotypes$Group %in% Teosinte, ]
View(Genotypes)
View(MaizeGenotypes)
View(MaizeGenotypes)
View(Genotypes)
View(SNPposition)
View(MaizeGenotypes)
View(TeosinteGenotypes)
MaizeGenotypes_cut <- MaizeGenotypes[,-1:-3]
TeosinteGenotypes_cut <- TeosinteGenotypes[,-1:-3]
SNPposition_cut <- SNPposition[, c("SNP_ID","Chromosome","Position")]
View(SNPposition)
View(SNPposition_cut)
View(SNPposition)
View(SNPposition_cut)
View(MaizeGenotypes_cut)
View(SNPposition_cut)
MaizeGenotypes_transposed <- as.data.frame(t(MaizeGenotypes_cut))
TeosinteGenotypes_transposed <- as.data.frame(t(TeosinteGenotypes_cut))
is.data.frame(MaizeGenotypes_transposed)
is.data.frame(TeosinteGenotypes_transposed)
SNPsMaizeGenotypes_transposed <- cbind(SNP_ID = rownames(MaizeGenotypes_transposed), MaizeGenotypes_transposed)
rownames(SNPsMaizeGenotypes_transposed) <- NULL
SNPsTeosinteGenotypes_transposed <- cbind(SNP_ID = rownames(TeosinteGenotypes_transposed), TeosinteGenotypes_transposed)
rownames(SNPsTeosinteGenotypes_transposed) <- NULL
View(SNPsMaizeGenotypes_transposed)
View(SNPsTeosinteGenotypes_transposed)
SNPposition_sorted <- SNPposition_cut[order(SNPposition_cut$SNP_ID),] #sort by SNP_ID
Maize_sorted <- SNPsMaizeGenotypes_transposed[order(SNPsMaizeGenotypes_transposed$SNP_ID),]
Teosinte_sorted <- SNPsTeosinteGenotypes_transposed[order(SNPsTeosinteGenotypes_transposed$SNP_ID),]
table(SNPposition_sorted$SNP_ID %in% Maize_sorted$SNP_ID)
table(SNPposition_sorted$SNP_ID %in% Teosinte_sorted$SNP_ID)
Maize_joined <- merge(SNPposition_sorted, Maize_sorted, by.x="SNP_ID", by.y="SNP_ID")
Teosinte_joined <- merge(SNPposition_sorted, Teosinte_sorted, by.x="SNP_ID", by.y="SNP_ID")
MaizeIncrease_ordered <- Maize_joined[mixedorder(Maize_joined$Position),]
TeosinteIncrease_ordered <- Teosinte_joined[mixedorder(Teosinte_joined$Position),]
install.packages(gtools)
library("gtools", lib.loc="~/R/win-library/3.3")
MaizeIncrease_ordered <- Maize_joined[mixedorder(Maize_joined$Position),]
TeosinteIncrease_ordered <- Teosinte_joined[mixedorder(Teosinte_joined$Position),]
MaizeChr1 <- MaizeIncrease_ordered[MaizeIncrease_ordered$Chromosome == 1,]
write.table(MaizeChr1, "MaizeChr1.txt", sep="\t", row.names = FALSE)
MaizeChr2 <- MaizeIncrease_ordered[MaizeIncrease_ordered$Chromosome == 2,]
write.table(MaizeChr2, "MaizeChr2.txt", sep="\t", row.names = FALSE)
MaizeChr3 <- MaizeIncrease_ordered[MaizeIncrease_ordered$Chromosome == 3,]
write.table(MaizeChr3, "MaizeChr3.txt", sep="\t", row.names = FALSE)
MaizeChr4 <- MaizeIncrease_ordered[MaizeIncrease_ordered$Chromosome == 4,]
write.table(MaizeChr4, "MaizeChr4.txt", sep="\t", row.names = FALSE)
MaizeChr5 <- MaizeIncrease_ordered[MaizeIncrease_ordered$Chromosome == 5,]
write.table(MaizeChr5, "MaizeChr5.txt", sep="\t", row.names = FALSE)
MaizeChr6 <- MaizeIncrease_ordered[MaizeIncrease_ordered$Chromosome == 6,]
write.table(MaizeChr6, "MaizeChr6.txt", sep="\t", row.names = FALSE)
MaizeChr7 <- MaizeIncrease_ordered[MaizeIncrease_ordered$Chromosome == 7,]
write.table(MaizeChr7, "MaizeChr7.txt", sep="\t", row.names = FALSE)
MaizeChr8 <- MaizeIncrease_ordered[MaizeIncrease_ordered$Chromosome == 8,]
write.table(MaizeChr8, "MaizeChr8.txt", sep="\t", row.names = FALSE)
MaizeChr9 <- MaizeIncrease_ordered[MaizeIncrease_ordered$Chromosome == 9,]
write.table(MaizeChr9, "MaizeChr9.txt", sep="\t", row.names = FALSE)
MaizeChr10 <- MaizeIncrease_ordered[MaizeIncrease_ordered$Chromosome == 10,]
write.table(MaizeChr10, "MaizeChr10.txt", sep="\t", row.names = FALSE)
TeosinteChr1 <- TeosinteIncrease_ordered[TeosinteIncrease_ordered$Chromosome == 1,]
write.table(TeosinteChr1, "TeosinteChr1.txt", sep="\t", row.names = FALSE)
TeosinteChr2 <- TeosinteIncrease_ordered[TeosinteIncrease_ordered$Chromosome == 2,]
write.table(TeosinteChr2, "TeosinteChr2.txt", sep="\t", row.names = FALSE)
TeosinteChr3 <- TeosinteIncrease_ordered[TeosinteIncrease_ordered$Chromosome == 3,]
write.table(TeosinteChr3, "TeosinteChr3.txt", sep="\t", row.names = FALSE)
TeosinteChr4 <- TeosinteIncrease_ordered[TeosinteIncrease_ordered$Chromosome == 4,]
write.table(TeosinteChr4, "TeosinteChr4.txt", sep="\t", row.names = FALSE)
TeosinteChr5 <- TeosinteIncrease_ordered[TeosinteIncrease_ordered$Chromosome == 5,]
write.table(TeosinteChr5, "TeosinteChr5.txt", sep="\t", row.names = FALSE)
TeosinteChr6 <- TeosinteIncrease_ordered[TeosinteIncrease_ordered$Chromosome == 6,]
write.table(TeosinteChr6, "TeosinteChr6.txt", sep="\t", row.names = FALSE)
TeosinteChr7 <- TeosinteIncrease_ordered[TeosinteIncrease_ordered$Chromosome == 7,]
write.table(TeosinteChr7, "TeosinteChr7.txt", sep="\t", row.names = FALSE)
TeosinteChr8 <- TeosinteIncrease_ordered[TeosinteIncrease_ordered$Chromosome == 8,]
write.table(TeosinteChr8, "TeosinteChr8.txt", sep="\t", row.names = FALSE)
TeosinteChr9 <- TeosinteIncrease_ordered[TeosinteIncrease_ordered$Chromosome == 9,]
write.table(TeosinteChr9, "TeosinteChr9.txt", sep="\t", row.names = FALSE)
TeosinteChr10 <- TeosinteIncrease_ordered[TeosinteIncrease_ordered$Chromosome == 10,]
write.table(TeosinteChr10, "TeosinteChr10.txt", sep="\t", row.names = FALSE)
Maize_missing <- as.data.frame(lapply(Maize_joined, function(x) {gsub("\\?","-", x)})) # missing data replaced with symbol -
Teosinte_missing <- as.data.frame(lapply(Teosinte_joined, function(x) {gsub("\\?","-", x)})) # missing data replaced with symbol -
MaizeDecrease_ordered <- Maize_missing[mixedorder(as.character(Maize_missing$Position), decreasing=TRUE),]
TeosinteDecrease_ordered <- Teosinte_missing[mixedorder(as.character(Teosinte_missing$Position), decreasing=TRUE),]
MaizeChr1_d <- MaizeDecrease_ordered[MaizeDecrease_ordered$Chromosome == 1,]
write.table(MaizeChr1_d, "MaizeChr1_d.txt", sep="\t", row.names = FALSE)
MaizeChr2_d <- MaizeDecrease_ordered[MaizeDecrease_ordered$Chromosome == 2,]
write.table(MaizeChr2_d, "MaizeChr2_d.txt", sep="\t", row.names = FALSE)
MaizeChr3_d <- MaizeDecrease_ordered[MaizeDecrease_ordered$Chromosome == 3,]
write.table(MaizeChr3_d, "MaizeChr3_d.txt", sep="\t", row.names = FALSE)
MaizeChr4_d <- MaizeDecrease_ordered[MaizeDecrease_ordered$Chromosome == 4,]
write.table(MaizeChr4_d, "MaizeChr4_d.txt", sep="\t", row.names = FALSE)
MaizeChr5_d <- MaizeDecrease_ordered[MaizeDecrease_ordered$Chromosome == 5,]
write.table(MaizeChr5_d, "MaizeChr5_d.txt", sep="\t", row.names = FALSE)
MaizeChr6_d <- MaizeDecrease_ordered[MaizeDecrease_ordered$Chromosome == 6,]
write.table(MaizeChr6_d, "MaizeChr6_d.txt", sep="\t", row.names = FALSE)
MaizeChr7_d <- MaizeDecrease_ordered[MaizeDecrease_ordered$Chromosome == 7,]
write.table(MaizeChr7_d, "MaizeChr7_d.txt", sep="\t", row.names = FALSE)
MaizeChr8_d <- MaizeDecrease_ordered[MaizeDecrease_ordered$Chromosome == 8,]
write.table(MaizeChr8_d, "MaizeChr8_d.txt", sep="\t", row.names = FALSE)
MaizeChr9_d <- MaizeDecrease_ordered[MaizeDecrease_ordered$Chromosome == 9,]
write.table(MaizeChr9_d, "MaizeChr9_d.txt", sep="\t", row.names = FALSE)
MaizeChr10_d <- MaizeDecrease_ordered[MaizeDecrease_ordered$Chromosome == 10,]
write.table(MaizeChr10_d, "MaizeChr10_d.txt", sep="\t", row.names = FALSE)
TeosinteChr1_d <- TeosinteDecrease_ordered[TeosinteDecrease_ordered$Chromosome == 1,]
write.table(TeosinteChr1_d, "TeosinteChr1_d.txt", sep="\t", row.names = FALSE)
TeosinteChr2_d <- TeosinteDecrease_ordered[TeosinteDecrease_ordered$Chromosome == 2,]
write.table(TeosinteChr2_d, "TeosinteChr2_d.txt", sep="\t", row.names = FALSE)
TeosinteChr3_d <- TeosinteDecrease_ordered[TeosinteDecrease_ordered$Chromosome == 3,]
write.table(TeosinteChr3_d, "TeosinteChr3_d.txt", sep="\t", row.names = FALSE)
TeosinteChr4_d <- TeosinteDecrease_ordered[TeosinteDecrease_ordered$Chromosome == 4,]
write.table(TeosinteChr4_d, "TeosinteChr4_d.txt", sep="\t", row.names = FALSE)
TeosinteChr5_d <- TeosinteDecrease_ordered[TeosinteDecrease_ordered$Chromosome == 5,]
write.table(TeosinteChr5_d, "TeosinteChr5_d.txt", sep="\t", row.names = FALSE)
TeosinteChr6_d <- TeosinteDecrease_ordered[TeosinteDecrease_ordered$Chromosome == 6,]
write.table(TeosinteChr6_d, "TeosinteChr6_d.txt", sep="\t", row.names = FALSE)
TeosinteChr7_d <- TeosinteDecrease_ordered[TeosinteDecrease_ordered$Chromosome == 7,]
write.table(TeosinteChr7_d, "TeosinteChr7_d.txt", sep="\t", row.names = FALSE)
TeosinteChr8_d <- TeosinteDecrease_ordered[TeosinteDecrease_ordered$Chromosome == 8,]
write.table(TeosinteChr8_d, "TeosinteChr8_d.txt", sep="\t", row.names = FALSE)
TeosinteChr9_d <- TeosinteDecrease_ordered[TeosinteDecrease_ordered$Chromosome == 9,]
write.table(TeosinteChr9_d, "TeosinteChr9_d.txt", sep="\t", row.names = FALSE)
TeosinteChr10_d <- TeosinteDecrease_ordered[TeosinteDecrease_ordered$Chromosome == 10,]
write.table(TeosinteChr10_d, "TeosinteChr10_d.txt", sep="\t", row.names = FALSE)
View(MaizeChr1_d)
